{"version":3,"sources":["context/typeContext.js","components/Setting.js","components/Start.js","components/Game.js","components/Time.js","components/Score.js","components/GameOver.js","App.js","context/types.js","context/typeReducer.js","context/TypeState.js","index.js"],"names":["typeContext","createContext","Setting","useContext","TypeContext","setting","difficulty","setDifficulty","classes","push","className","join","htmlFor","value","onChange","e","target","Start","started","getWord","setCurrName","setStart","useState","name","setName","type","placeholder","autoComplete","onClick","alert","Game","word","correct","gameOver","useRef","inputType","setInputType","current","focus","checkCorrect","currWord","toLowerCase","splice","length","ref","Time","currTime","Score","score","GameOver","currName","window","location","reload","App","SHOW_SETTING","SET_DIFFICULTY","GET_WORD","SET_CURR_NAME","SET_START","CORRECT","UPDATE_TIME","typeReducer","state","action","payload","exTime","TypeState","children","useReducer","TypeReducer","dispatch","a","fetch","res","json","updtateTime","Provider","showSetting","updatedCurrName","setTimeout","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b53437c5.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst typeContext = createContext();\r\n\r\nexport default typeContext;\r\n","import React, { useContext } from 'react';\r\nimport TypeContext from '../context/typeContext';\r\n\r\nconst Setting = () => {\r\n  const { setting, difficulty, setDifficulty } = useContext(TypeContext);\r\n  let classes = ['setting-container'];\r\n\r\n  if (!setting) {\r\n    classes.push('hide');\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setDifficulty(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <form>\r\n        <label htmlFor='difficulty'>Difficulty</label>\r\n        <select\r\n          className='difficulty'\r\n          value={difficulty}\r\n          onChange={handleChange}>\r\n          <option value='easy'>Easy</option>\r\n          <option value='medium'>Medium</option>\r\n          <option value='hard'>Hard</option>\r\n        </select>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React, { useContext, useState } from 'react';\r\nimport TypeContext from '../context/typeContext';\r\n\r\nconst Start = () => {\r\n  const { started, getWord, setCurrName, setStart } = useContext(TypeContext);\r\n  const [name, setName] = useState('');\r\n  const classes = ['start-container'];\r\n  if (started) {\r\n    classes.push('hide');\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (!started) {\r\n      if (name === '') {\r\n        alert('Enter your name');\r\n      } else {\r\n        setStart();\r\n        setCurrName(name);\r\n        getWord();\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <input\r\n        type='text'\r\n        value={name}\r\n        placeholder='Enter your name'\r\n        className='name'\r\n        autoComplete='off'\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <button className='start' onClick={handleClick}>\r\n        Start\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React, { useContext, useRef, useState } from 'react';\r\nimport TypeContext from '../context/typeContext';\r\nconst Game = () => {\r\n  const { started, word, correct, gameOver } = useContext(TypeContext);\r\n  const classes = ['game-container'];\r\n  const type = useRef(null);\r\n  const [inputType, setInputType] = useState('');\r\n  if (started) {\r\n    classes.push('started');\r\n    type.current.focus();\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setInputType(e.target.value);\r\n    checkCorrect(e.target.value);\r\n  };\r\n\r\n  const checkCorrect = (currWord) => {\r\n    if (currWord.toLowerCase() === word[0]) {\r\n      correct();\r\n      setInputType('');\r\n    }\r\n  };\r\n  if (gameOver) {\r\n    classes.splice(classes.length - 1, 1);\r\n  }\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <p>Type the following:</p>\r\n      <h1>{word[0]}</h1>\r\n      <input\r\n        ref={type}\r\n        value={inputType}\r\n        onChange={handleChange}\r\n        type='text'\r\n        placeholder='Enter the word...'\r\n        autoComplete='off'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useContext } from 'react';\r\nimport TypeContext from '../context/typeContext';\r\n\r\nconst Time = () => {\r\n  const { started, currTime, gameOver } = useContext(TypeContext);\r\n  const classes = ['time-container'];\r\n  if (started) {\r\n    classes.push('started');\r\n  }\r\n  if (gameOver) {\r\n    classes.splice(classes.length - 1, 1);\r\n  }\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <p>Time left: {currTime}s</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React, { useContext } from 'react';\r\nimport TypeContext from '../context/typeContext';\r\nconst Score = () => {\r\n  const { started, score, gameOver } = useContext(TypeContext);\r\n  const classes = ['score-container'];\r\n  if (started) {\r\n    classes.push('started');\r\n  }\r\n\r\n  if (gameOver) {\r\n    classes.splice(classes.length - 1, 1);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <p>Score: {score}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React, { useContext } from 'react';\r\nimport TypeContext from '../context/typeContext';\r\n\r\nconst GameOver = () => {\r\n  const { currName, score, gameOver } = useContext(TypeContext);\r\n  const classes = ['end-game'];\r\n  if (gameOver) {\r\n    classes.push('gameover');\r\n  }\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <h2>Time out</h2>\r\n      <p>\r\n        Game Over <span className='name-red'>{currName} </span>😃😎\r\n      </p>\r\n      <p className='score'>Your Score: {score}</p>\r\n      <button onClick={() => window.location.reload(false)}>Play Again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React from 'react';\nimport Setting from './components/Setting';\nimport Start from './components/Start';\nimport Game from './components/Game';\nimport Time from './components/Time';\nimport Score from './components/Score';\nimport GameOver from './components/GameOver';\n\nconst App = () => {\n  return (\n    <>\n      <Setting />\n      <div className='container'>\n        <h2 className='game-title'>👩‍💻 Speed Typer 👨‍💻</h2>\n        <Start />\n        <Game />\n        <Time />\n        <Score />\n        <GameOver />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","export const SHOW_SETTING = 'SHOW_SETTING';\r\nexport const SET_DIFFICULTY = 'SET_DIFFICULTY';\r\nexport const GET_WORD = 'GET_WORD';\r\nexport const SET_CURR_NAME = 'SET_CURR_NAME';\r\nexport const SET_START = 'SET_START';\r\nexport const CORRECT = 'CORRECT';\r\nexport const UPDATE_TIME = 'UPDATE_TIME';\r\n","import {\r\n  SHOW_SETTING,\r\n  SET_DIFFICULTY,\r\n  SET_CURR_NAME,\r\n  GET_WORD,\r\n  SET_START,\r\n  UPDATE_TIME,\r\n  CORRECT,\r\n} from './types';\r\n\r\nconst typeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SHOW_SETTING:\r\n      return {\r\n        ...state,\r\n        setting: !state.setting,\r\n      };\r\n    case SET_DIFFICULTY:\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n      };\r\n    case GET_WORD:\r\n      return {\r\n        ...state,\r\n        word: action.payload,\r\n      };\r\n    case SET_CURR_NAME:\r\n      return {\r\n        ...state,\r\n        currName: action.payload,\r\n      };\r\n    case SET_START:\r\n      return {\r\n        ...state,\r\n        started: true,\r\n        setting: false,\r\n      };\r\n    case CORRECT:\r\n      let exTime;\r\n      if (state.difficulty === 'easy') {\r\n        exTime = 10;\r\n      } else if (state.difficulty === 'medium') {\r\n        exTime = 5;\r\n      } else {\r\n        exTime = 3;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currTime: state.currTime + exTime,\r\n        score: state.score + 1,\r\n      };\r\n    case UPDATE_TIME:\r\n      if (state.currTime === 0) {\r\n        state.gameOver = true;\r\n      }\r\n      return {\r\n        ...state,\r\n        currTime: state.currTime - 1,\r\n        gameOver: state.gameOver,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default typeReducer;\r\n","import React, { useReducer } from 'react';\r\nimport TypeReducer from './typeReducer';\r\nimport TypeContext from './typeContext';\r\nimport {\r\n  GET_WORD,\r\n  SET_DIFFICULTY,\r\n  SHOW_SETTING,\r\n  SET_CURR_NAME,\r\n  SET_START,\r\n  CORRECT,\r\n  UPDATE_TIME,\r\n} from './types';\r\n\r\nconst TypeState = ({ children }) => {\r\n  const initialState = {\r\n    currName: '',\r\n    score: 0,\r\n    currTime: 8,\r\n    difficulty: 'medium',\r\n    setting: true,\r\n    started: false,\r\n    word: [],\r\n    gameOver: false,\r\n  };\r\n  const [state, dispatch] = useReducer(TypeReducer, initialState);\r\n  const showSetting = () => {\r\n    dispatch({ type: SHOW_SETTING });\r\n  };\r\n\r\n  const setDifficulty = (difficulty) => {\r\n    dispatch({ type: SET_DIFFICULTY, payload: difficulty });\r\n  };\r\n\r\n  const getWord = async () => {\r\n    const res = await fetch(\r\n      `https://random-word-api.herokuapp.com/word?number=1`\r\n    );\r\n    const word = await res.json();\r\n    dispatch({ type: GET_WORD, payload: word });\r\n  };\r\n\r\n  const setCurrName = (updatedCurrName) => {\r\n    dispatch({ type: SET_CURR_NAME, payload: updatedCurrName });\r\n  };\r\n\r\n  const setStart = () => {\r\n    dispatch({ type: SET_START });\r\n    setTimeout(() => {\r\n      setInterval(updtateTime, 1000);\r\n    }, 800);\r\n  };\r\n\r\n  const correct = () => {\r\n    getWord();\r\n    dispatch({ type: CORRECT });\r\n  };\r\n\r\n  const updtateTime = () => {\r\n    dispatch({ type: UPDATE_TIME });\r\n  };\r\n\r\n  return (\r\n    <TypeContext.Provider\r\n      value={{\r\n        currName: state.currName,\r\n        score: state.score,\r\n        currTime: state.currTime,\r\n        difficulty: state.difficulty,\r\n        setting: state.setting,\r\n        started: state.started,\r\n        word: state.word,\r\n        gameOver: state.gameOver,\r\n        showSetting,\r\n        setDifficulty,\r\n        getWord,\r\n        setCurrName,\r\n        setStart,\r\n        correct,\r\n      }}>\r\n      {children}\r\n    </TypeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TypeState;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TypeState from './context/TypeState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TypeState>\n      <App />\n    </TypeState>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}